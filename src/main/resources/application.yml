server:
  port: 8081

spring:
  application:
    name: authorization-server
  main:
    banner-mode: console # Disable the Spring logo
    #        web-application-type: none
  #    allow-bean-definition-overriding: true

  datasource:
    url: jdbc:mysql://localhost:3306/sso?allowpublickeyretrieval=true&usessl=false
    username: root
    password: A%9jr>NK
    driver-class-name: com.mysql.cj.jdbc.Driver
    hikari:
      connection-timeout: 60000
      maximum-pool-size: 5
  #  jpa:
  #    hibernate:
  #      ddl-auto: none
  #      naming:
  #        physical-strategy: org.hibernate.boot.model.naming.PhysicalNamingStrategyStandardImpl
  #    show-sql: true
  #    properties:
  #      hibernate:
  #        dialect: org.hibernate.dialect.MySQL5Dialect
  #    generate-ddl: true

  security:
    oauth2:
      client:
        registration:
          google:
            clientId: 773619103626-c457k0qqgip96ej65846p61j6ij47fcs.apps.googleusercontent.com
            clientSecret: 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
            redirectUri: http://localhost:8081/login/oauth2/code/google
            #            client-authentication-method: basic
            #            provider: google
#            scope:
              #              - openid  #if add, loadUser will not execute
#              - profile
#              - email
            #              - https://www.googleapis.com/auth/userinfo.email
            #              - https://www.googleapis.com/auth/userinfo.profile
            #              - openid
            client-name: google

        provider:
          google:
            authorization-uri: https://accounts.google.com/o/oauth2/v2/auth # https://accounts.google.com/o/oauth2/auth
            token-uri: https://oauth2.googleapis.com/token # https://accounts.google.com/o/oauth2/token
            user-info-uri: https://www.googleapis.com/oauth2/v3/userinfo
            jwk-set-uri: https://www.googleapis.com/oauth2/v3/certs
            user-name-attribute: sub

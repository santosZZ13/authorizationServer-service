server:
  port: 8002

spring:

  application:
    name: authorizationServer-service
  main:
    banner-mode: console # Disable the Spring logo
    #        web-application-type: none
  #    allow-bean-definition-overriding: true

  thymeleaf:
    cache: false
    prefix: classpath:/templates/
    suffix: .html
    mode: HTML
    encoding: UTF-8

  datasource:
    url: jdbc:postgresql://34.132.190.113:5432/postgres
    username: postgres
    password: sYz\Z+Qxt{))"r8t
    driver-class-name: org.postgresql.Driver
    type: com.zaxxer.hikari.HikariDataSource
    hikari:
      connection-timeout: 60000
      maximum-pool-size: 5
#    jpa:
#      hibernate:
#        ddl-auto: none
#        naming:
#          physical-strategy: org.hibernate.boot.model.naming.PhysicalNamingStrategyStandardImpl
#      show-sql: true
#      properties:
#        hibernate:
#          dialect: org.hibernate.dialect.MySQL5Dialect
#      generate-ddl: true
#eureka:
#  client:
#    service-url:
#      defaultZone: ${EUREKA_URI:http://localhost:8761/eureka}
#  instance:
#    preferIpAddress: true



  security:
    oauth2:
      client:
        registration:
          google:
            provider: google
            client-id: 402954404657-k57kh27pm1ddgg21dcnjanb5eaujvifl.apps.googleusercontent.com
            client-secret: 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
            redirectUri: http://localhost:8002/login/oauth2/code/google

              #            client-authentication-method: basic
            #            provider: google
            #            scope:
            #              - openid  #if add, loadUser will not execute
            #              - profile
            #              - email
            #              - https://www.googleapis.com/auth/userinfo.email
            #              - https://www.googleapis.com/auth/userinfo.profile
            #              - openid
#            client-name: google


        provider:
          google:
            authorization-uri: https://accounts.google.com/o/oauth2/v2/auth # https://accounts.google.com/o/oauth2/auth
            token-uri: https://oauth2.googleapis.com/token # https://accounts.google.com/o/oauth2/token
            user-info-uri: https://www.googleapis.com/oauth2/v3/userinfo
#            jwk-set-uri: https://www.googleapis.com/oauth2/v3/certs
#            user-name-attribute: sub

logging:
  level:
    org.springframework.security: DEBUG